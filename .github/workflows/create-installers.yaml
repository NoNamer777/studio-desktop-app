name: Create Installers

on:
    workflow_run:
        types:
            - 'completed'
        workflows:
            - 'Create Tags'
jobs:
    check-version:
        name: Check version
        runs-on: ubuntu-latest
        outputs:
            VERSION: ${{ steps.version-check.outputs.VERSION }}
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0

            -   name: Check for version
                id: version-check
                run: |
                    VERSION=$(git tag --contains)
                    echo "The version tagged on the HEAD commit is '$VERSION'"
                    echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

    create-windows-installer:
        name: Create Windows installers
        runs-on: windows-latest
        needs: check-version
        env:
            VERSION: ${{ needs.check-version.outputs.VERSION }}
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Setup Node.JS
                uses: actions/setup-node@v4
                with:
                    node-version: ${{ env.NODE_VERSION }}
                    cache: npm
                    cache-dependency-path: package-lock.json

            -   name: Install dependencies
                run: npm ci

            -   name: Download code bundles
                uses: actions/download-artifact@v4
                with:
                    name: code-bundles
                    path: |
                        dist/apps

            -   name: Create installers
                run: npx nx make -c windows

            -   name: Upload installers
                uses: actions/upload-artifact@v4
                with:
                    name: windows-installer
                    path: |
                        dist/executables/windows/*

            -   name: Attach installers to release
                if: env.VERSION != ''
                uses: octokit/request-action@v2.x
                with:
                    route: POST /repos/{owner}/{repo}/releases/${{ env.VERSION }}/assets?name=windows-installer-${{ env.VERSION }}
                    owner: nonamer777
                    repo: studio-desktop-app
                    asset_name: windows-installer-${{ env.VERSION }}
                    asset_content_type: application/octet-stream
                    asset_path: |
                        dist/executables/windows/*
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

                    name: windows-installer-${{env.VERSION}}
                    path: |
                        dist/executables/windows/*

    create-mac-installer:
        name: Create MacOS installer
        runs-on: macos-latest
        needs: check-version
        env:
            VERSION: ${{ needs.check-version.outputs.VERSION }}
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Setup Node.JS
                uses: actions/setup-node@v4
                with:
                    node-version: ${{ env.NODE_VERSION }}
                    cache: npm
                    cache-dependency-path: package-lock.json

            -   name: Install dependencies
                run: npm ci

            -   name: Download code bundles
                uses: actions/download-artifact@v4
                with:
                    name: code-bundles
                    path: |
                        dist/apps

            -   name: Create installers
                run: npx nx make -c mac

            -   name: Upload installers
                uses: actions/upload-artifact@v4
                with:
                    name: mac-installer
                    path: |
                        dist/executables/mac/*

            -   name: Attach installers to release
                if: env.VERSION != ''
                uses: octokit/request-action@v2.x
                with:
                    route: POST /repos/{owner}/{repo}/releases/${{ env.VERSION }}/assets?name=mac-installer-${{ env.VERSION }}
                    owner: nonamer777
                    repo: studio-desktop-app
                    asset_name: mac-installer-${{ env.VERSION }}
                    asset_content_type: application/octet-stream
                    asset_path: |
                        dist/executables/mac/*
